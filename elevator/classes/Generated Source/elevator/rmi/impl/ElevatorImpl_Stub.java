// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package elevator.rmi.impl;

public final class ElevatorImpl_Stub
    extends java.rmi.server.RemoteStub
    implements elevator.rmi.Elevator, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_close_0;
    private static java.lang.reflect.Method $method_down_1;
    private static java.lang.reflect.Method $method_getScalePosition_2;
    private static java.lang.reflect.Method $method_open_3;
    private static java.lang.reflect.Method $method_setScalePosition_4;
    private static java.lang.reflect.Method $method_stop_5;
    private static java.lang.reflect.Method $method_up_6;
    private static java.lang.reflect.Method $method_whereIs_7;
    
    static {
	try {
	    $method_close_0 = elevator.rmi.Door.class.getMethod("close", new java.lang.Class[] {});
	    $method_down_1 = elevator.rmi.Motor.class.getMethod("down", new java.lang.Class[] {});
	    $method_getScalePosition_2 = elevator.rmi.Scale.class.getMethod("getScalePosition", new java.lang.Class[] {});
	    $method_open_3 = elevator.rmi.Door.class.getMethod("open", new java.lang.Class[] {});
	    $method_setScalePosition_4 = elevator.rmi.Scale.class.getMethod("setScalePosition", new java.lang.Class[] {int.class});
	    $method_stop_5 = elevator.rmi.Motor.class.getMethod("stop", new java.lang.Class[] {});
	    $method_up_6 = elevator.rmi.Motor.class.getMethod("up", new java.lang.Class[] {});
	    $method_whereIs_7 = elevator.rmi.Motor.class.getMethod("whereIs", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ElevatorImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of close()
    public void close()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_close_0, null, -4742752445160157748L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of down()
    public void down()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_1, null, -9074118343546327793L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getScalePosition()
    public int getScalePosition()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getScalePosition_2, null, 8726499427918184266L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of open()
    public void open()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_open_3, null, 2108930122558793662L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setScalePosition(int)
    public void setScalePosition(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setScalePosition_4, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -8288169480124495633L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop()
    public void stop()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_5, null, -2856118408655404442L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up()
    public void up()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_6, null, 4665897731548305845L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereIs()
    public double whereIs()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereIs_7, null, -6669529843607667526L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
