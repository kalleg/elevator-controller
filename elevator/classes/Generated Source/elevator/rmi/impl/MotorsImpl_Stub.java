// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package elevator.rmi.impl;

public final class MotorsImpl_Stub
    extends java.rmi.server.RemoteStub
    implements elevator.rmi.Motors, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_down_0;
    private static java.lang.reflect.Method $method_down_1;
    private static java.lang.reflect.Method $method_down_2;
    private static java.lang.reflect.Method $method_move_3;
    private static java.lang.reflect.Method $method_move_4;
    private static java.lang.reflect.Method $method_stop_5;
    private static java.lang.reflect.Method $method_stop_6;
    private static java.lang.reflect.Method $method_stop_7;
    private static java.lang.reflect.Method $method_up_8;
    private static java.lang.reflect.Method $method_up_9;
    private static java.lang.reflect.Method $method_up_10;
    private static java.lang.reflect.Method $method_whereAre_11;
    private static java.lang.reflect.Method $method_whereAre_12;
    private static java.lang.reflect.Method $method_whereIs_13;
    
    static {
	try {
	    $method_down_0 = elevator.rmi.Motors.class.getMethod("down", new java.lang.Class[] {});
	    $method_down_1 = elevator.rmi.Motors.class.getMethod("down", new java.lang.Class[] {int.class});
	    $method_down_2 = elevator.rmi.Motors.class.getMethod("down", new java.lang.Class[] {int[].class});
	    $method_move_3 = elevator.rmi.Motors.class.getMethod("move", new java.lang.Class[] {int[].class});
	    $method_move_4 = elevator.rmi.Motors.class.getMethod("move", new java.lang.Class[] {int[].class, int[].class});
	    $method_stop_5 = elevator.rmi.Motors.class.getMethod("stop", new java.lang.Class[] {});
	    $method_stop_6 = elevator.rmi.Motors.class.getMethod("stop", new java.lang.Class[] {int.class});
	    $method_stop_7 = elevator.rmi.Motors.class.getMethod("stop", new java.lang.Class[] {int[].class});
	    $method_up_8 = elevator.rmi.Motors.class.getMethod("up", new java.lang.Class[] {});
	    $method_up_9 = elevator.rmi.Motors.class.getMethod("up", new java.lang.Class[] {int.class});
	    $method_up_10 = elevator.rmi.Motors.class.getMethod("up", new java.lang.Class[] {int[].class});
	    $method_whereAre_11 = elevator.rmi.Motors.class.getMethod("whereAre", new java.lang.Class[] {});
	    $method_whereAre_12 = elevator.rmi.Motors.class.getMethod("whereAre", new java.lang.Class[] {int[].class});
	    $method_whereIs_13 = elevator.rmi.Motors.class.getMethod("whereIs", new java.lang.Class[] {int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public MotorsImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of down()
    public void down()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_0, null, -9074118343546327793L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of down(int)
    public void down(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_1, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -4867912524606602554L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of down(int[])
    public void down(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_2, new java.lang.Object[] {$param_arrayOf_int_1}, 71717313903953800L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of move(int[])
    public void move(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_move_3, new java.lang.Object[] {$param_arrayOf_int_1}, 6482924273068281871L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of move(int[], int[])
    public void move(int[] $param_arrayOf_int_1, int[] $param_arrayOf_int_2)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_move_4, new java.lang.Object[] {$param_arrayOf_int_1, $param_arrayOf_int_2}, 6428406196746310877L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop()
    public void stop()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_5, null, -2856118408655404442L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop(int)
    public void stop(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_6, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 5790108695852185755L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop(int[])
    public void stop(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_7, new java.lang.Object[] {$param_arrayOf_int_1}, -7279520253796961492L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up()
    public void up()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_8, null, 4665897731548305845L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up(int)
    public void up(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_9, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -5360794644593796103L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up(int[])
    public void up(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_10, new java.lang.Object[] {$param_arrayOf_int_1}, 5927768180963688216L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereAre()
    public double[] whereAre()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereAre_11, null, 8911442226439463725L);
	    return ((double[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereAre(int[])
    public double[] whereAre(int[] $param_arrayOf_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereAre_12, new java.lang.Object[] {$param_arrayOf_int_1}, -1752105459693767977L);
	    return ((double[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereIs(int)
    public double whereIs(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereIs_13, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -4499497751440525158L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
