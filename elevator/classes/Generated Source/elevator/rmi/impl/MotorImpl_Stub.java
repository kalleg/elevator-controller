// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package elevator.rmi.impl;

public final class MotorImpl_Stub
    extends java.rmi.server.RemoteStub
    implements elevator.rmi.Motor, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_down_0;
    private static java.lang.reflect.Method $method_stop_1;
    private static java.lang.reflect.Method $method_up_2;
    private static java.lang.reflect.Method $method_whereIs_3;
    
    static {
	try {
	    $method_down_0 = elevator.rmi.Motor.class.getMethod("down", new java.lang.Class[] {});
	    $method_stop_1 = elevator.rmi.Motor.class.getMethod("stop", new java.lang.Class[] {});
	    $method_up_2 = elevator.rmi.Motor.class.getMethod("up", new java.lang.Class[] {});
	    $method_whereIs_3 = elevator.rmi.Motor.class.getMethod("whereIs", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public MotorImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of down()
    public void down()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_0, null, -9074118343546327793L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop()
    public void stop()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_1, null, -2856118408655404442L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up()
    public void up()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_2, null, 4665897731548305845L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereIs()
    public double whereIs()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereIs_3, null, -6669529843607667526L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
