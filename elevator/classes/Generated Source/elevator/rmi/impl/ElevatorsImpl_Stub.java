// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package elevator.rmi.impl;

public final class ElevatorsImpl_Stub
    extends java.rmi.server.RemoteStub
    implements elevator.rmi.Elevators, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_close_0;
    private static java.lang.reflect.Method $method_close_1;
    private static java.lang.reflect.Method $method_close_2;
    private static java.lang.reflect.Method $method_down_3;
    private static java.lang.reflect.Method $method_down_4;
    private static java.lang.reflect.Method $method_down_5;
    private static java.lang.reflect.Method $method_getScalePosition_6;
    private static java.lang.reflect.Method $method_getScalePosition_7;
    private static java.lang.reflect.Method $method_getScalePosition_8;
    private static java.lang.reflect.Method $method_move_9;
    private static java.lang.reflect.Method $method_move_10;
    private static java.lang.reflect.Method $method_open_11;
    private static java.lang.reflect.Method $method_open_12;
    private static java.lang.reflect.Method $method_open_13;
    private static java.lang.reflect.Method $method_operate_14;
    private static java.lang.reflect.Method $method_operate_15;
    private static java.lang.reflect.Method $method_setScalePosition_16;
    private static java.lang.reflect.Method $method_setScalePosition_17;
    private static java.lang.reflect.Method $method_setScalePosition_18;
    private static java.lang.reflect.Method $method_setScalePosition_19;
    private static java.lang.reflect.Method $method_setScalePosition_20;
    private static java.lang.reflect.Method $method_stop_21;
    private static java.lang.reflect.Method $method_stop_22;
    private static java.lang.reflect.Method $method_stop_23;
    private static java.lang.reflect.Method $method_up_24;
    private static java.lang.reflect.Method $method_up_25;
    private static java.lang.reflect.Method $method_up_26;
    private static java.lang.reflect.Method $method_whereAre_27;
    private static java.lang.reflect.Method $method_whereAre_28;
    private static java.lang.reflect.Method $method_whereIs_29;
    
    static {
	try {
	    $method_close_0 = elevator.rmi.Doors.class.getMethod("close", new java.lang.Class[] {});
	    $method_close_1 = elevator.rmi.Doors.class.getMethod("close", new java.lang.Class[] {int.class});
	    $method_close_2 = elevator.rmi.Doors.class.getMethod("close", new java.lang.Class[] {int[].class});
	    $method_down_3 = elevator.rmi.Motors.class.getMethod("down", new java.lang.Class[] {});
	    $method_down_4 = elevator.rmi.Motors.class.getMethod("down", new java.lang.Class[] {int.class});
	    $method_down_5 = elevator.rmi.Motors.class.getMethod("down", new java.lang.Class[] {int[].class});
	    $method_getScalePosition_6 = elevator.rmi.Scales.class.getMethod("getScalePosition", new java.lang.Class[] {});
	    $method_getScalePosition_7 = elevator.rmi.Scales.class.getMethod("getScalePosition", new java.lang.Class[] {int.class});
	    $method_getScalePosition_8 = elevator.rmi.Scales.class.getMethod("getScalePosition", new java.lang.Class[] {int[].class});
	    $method_move_9 = elevator.rmi.Motors.class.getMethod("move", new java.lang.Class[] {int[].class});
	    $method_move_10 = elevator.rmi.Motors.class.getMethod("move", new java.lang.Class[] {int[].class, int[].class});
	    $method_open_11 = elevator.rmi.Doors.class.getMethod("open", new java.lang.Class[] {});
	    $method_open_12 = elevator.rmi.Doors.class.getMethod("open", new java.lang.Class[] {int.class});
	    $method_open_13 = elevator.rmi.Doors.class.getMethod("open", new java.lang.Class[] {int[].class});
	    $method_operate_14 = elevator.rmi.Doors.class.getMethod("operate", new java.lang.Class[] {int[].class});
	    $method_operate_15 = elevator.rmi.Doors.class.getMethod("operate", new java.lang.Class[] {int[].class, int[].class});
	    $method_setScalePosition_16 = elevator.rmi.Scales.class.getMethod("setScalePosition", new java.lang.Class[] {int.class});
	    $method_setScalePosition_17 = elevator.rmi.Scales.class.getMethod("setScalePosition", new java.lang.Class[] {int.class, int.class});
	    $method_setScalePosition_18 = elevator.rmi.Scales.class.getMethod("setScalePosition", new java.lang.Class[] {int[].class});
	    $method_setScalePosition_19 = elevator.rmi.Scales.class.getMethod("setScalePosition", new java.lang.Class[] {int[].class, int.class});
	    $method_setScalePosition_20 = elevator.rmi.Scales.class.getMethod("setScalePosition", new java.lang.Class[] {int[].class, int[].class});
	    $method_stop_21 = elevator.rmi.Motors.class.getMethod("stop", new java.lang.Class[] {});
	    $method_stop_22 = elevator.rmi.Motors.class.getMethod("stop", new java.lang.Class[] {int.class});
	    $method_stop_23 = elevator.rmi.Motors.class.getMethod("stop", new java.lang.Class[] {int[].class});
	    $method_up_24 = elevator.rmi.Motors.class.getMethod("up", new java.lang.Class[] {});
	    $method_up_25 = elevator.rmi.Motors.class.getMethod("up", new java.lang.Class[] {int.class});
	    $method_up_26 = elevator.rmi.Motors.class.getMethod("up", new java.lang.Class[] {int[].class});
	    $method_whereAre_27 = elevator.rmi.Motors.class.getMethod("whereAre", new java.lang.Class[] {});
	    $method_whereAre_28 = elevator.rmi.Motors.class.getMethod("whereAre", new java.lang.Class[] {int[].class});
	    $method_whereIs_29 = elevator.rmi.Motors.class.getMethod("whereIs", new java.lang.Class[] {int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ElevatorsImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of close()
    public void close()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_close_0, null, -4742752445160157748L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of close(int)
    public void close(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_close_1, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -8813479922535946172L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of close(int[])
    public void close(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_close_2, new java.lang.Object[] {$param_arrayOf_int_1}, -6402089273977995827L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of down()
    public void down()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_3, null, -9074118343546327793L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of down(int)
    public void down(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_4, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -4867912524606602554L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of down(int[])
    public void down(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_down_5, new java.lang.Object[] {$param_arrayOf_int_1}, 71717313903953800L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getScalePosition()
    public int[] getScalePosition()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getScalePosition_6, null, -8601261060596936590L);
	    return ((int[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getScalePosition(int)
    public int getScalePosition(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getScalePosition_7, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 4119658312077355259L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getScalePosition(int[])
    public int[] getScalePosition(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getScalePosition_8, new java.lang.Object[] {$param_arrayOf_int_1}, -2209979704310766329L);
	    return ((int[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of move(int[])
    public void move(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_move_9, new java.lang.Object[] {$param_arrayOf_int_1}, 6482924273068281871L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of move(int[], int[])
    public void move(int[] $param_arrayOf_int_1, int[] $param_arrayOf_int_2)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_move_10, new java.lang.Object[] {$param_arrayOf_int_1, $param_arrayOf_int_2}, 6428406196746310877L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of open()
    public void open()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_open_11, null, 2108930122558793662L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of open(int)
    public void open(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_open_12, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -3109760846282802569L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of open(int[])
    public void open(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_open_13, new java.lang.Object[] {$param_arrayOf_int_1}, 381417742691975842L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of operate(int[])
    public void operate(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_operate_14, new java.lang.Object[] {$param_arrayOf_int_1}, 4240723040120963154L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of operate(int[], int[])
    public void operate(int[] $param_arrayOf_int_1, int[] $param_arrayOf_int_2)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_operate_15, new java.lang.Object[] {$param_arrayOf_int_1, $param_arrayOf_int_2}, -6228161858448778909L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setScalePosition(int)
    public void setScalePosition(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setScalePosition_16, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -8288169480124495633L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setScalePosition(int, int)
    public void setScalePosition(int $param_int_1, int $param_int_2)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setScalePosition_17, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Integer($param_int_2)}, -421879673140593336L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setScalePosition(int[])
    public void setScalePosition(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setScalePosition_18, new java.lang.Object[] {$param_arrayOf_int_1}, 8938184755081819676L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setScalePosition(int[], int)
    public void setScalePosition(int[] $param_arrayOf_int_1, int $param_int_2)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setScalePosition_19, new java.lang.Object[] {$param_arrayOf_int_1, new java.lang.Integer($param_int_2)}, -4485527207079797719L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setScalePosition(int[], int[])
    public void setScalePosition(int[] $param_arrayOf_int_1, int[] $param_arrayOf_int_2)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setScalePosition_20, new java.lang.Object[] {$param_arrayOf_int_1, $param_arrayOf_int_2}, 1167890243389149752L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop()
    public void stop()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_21, null, -2856118408655404442L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop(int)
    public void stop(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_22, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 5790108695852185755L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stop(int[])
    public void stop(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stop_23, new java.lang.Object[] {$param_arrayOf_int_1}, -7279520253796961492L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up()
    public void up()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_24, null, 4665897731548305845L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up(int)
    public void up(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_25, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -5360794644593796103L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of up(int[])
    public void up(int[] $param_arrayOf_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_up_26, new java.lang.Object[] {$param_arrayOf_int_1}, 5927768180963688216L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereAre()
    public double[] whereAre()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereAre_27, null, 8911442226439463725L);
	    return ((double[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereAre(int[])
    public double[] whereAre(int[] $param_arrayOf_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereAre_28, new java.lang.Object[] {$param_arrayOf_int_1}, -1752105459693767977L);
	    return ((double[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of whereIs(int)
    public double whereIs(int $param_int_1)
	throws elevator.rmi.IllegalParamException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_whereIs_29, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -4499497751440525158L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
